services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/dockerfiles/nginx/Dockerfile
      target: dev
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    volumes:
      - ./:${APP_PATH}
    depends_on:
      - php
    networks:
      - traefik-docker
    labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-docker"
        - "traefik.http.routers.docker_dev.rule=Host(`moonshine-demo.docker.dev`)"
        - "traefik.http.routers.docker_dev.entrypoints=https"
        - "traefik.http.routers.docker_dev.tls=true"
        - "traefik.http.services.docker_dev.loadbalancer.server.port=80"

  php:
    build:
      args:
        user: ${DOCKER_USER}
        uid: 1000
        target: dev
      context: .
      dockerfile: ./docker/dockerfiles/php/Dockerfile
      target: dev
    container_name: ${COMPOSE_PROJECT_NAME}-php
    volumes:
      - ./:${APP_PATH}
    depends_on:
      - db
      - redis
    networks:
      - traefik-docker

  db:
    container_name: ${COMPOSE_PROJECT_NAME}-db
    build:
      context: .
      dockerfile: ./docker/dockerfiles/mysql/Dockerfile
    volumes:
      - ./docker/volumes/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
    networks:
      - traefik-docker

  redis:
    container_name: ${COMPOSE_PROJECT_NAME}-redis
    image: redis:7.0.11-alpine
    volumes:
      - ./docker/volumes/redis:/data
    # ports:
    #   - "${APP_REDIS_PORT}:6379"
    networks:
      - traefik-docker

  npm:
    build:
      context: .
      dockerfile: ./docker/dockerfiles/node/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-npm
    volumes:
      - ./:${APP_PATH}:cached
      - ./.env:${APP_PATH}/.env
    working_dir: ${APP_PATH}
    profiles: ["npm"]
    entrypoint: ['npm']
    # ports:
    #   - "${VITE_PORT}:${VITE_PORT}"
    networks:
      - traefik-docker

networks:
  traefik-docker:
    external: true
